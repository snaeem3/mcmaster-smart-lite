name: Publish New Version
run-name: ${{ github.actor }} is publishing a new extension version
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    environment: production
    steps:
      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Fetch last commit to compare with

    - name: Compare manifest.json version
      id: version_check
      run: |
        PREV_VERSION=$(git show HEAD^:src/manifest.json | jq -r '.version')
        CURR_VERSION=$(cat src/manifest.json | jq -r '.version')


        echo "Previous version: $PREV_VERSION"
        echo "Current version: $CURR_VERSION"

        if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
          echo "Version changed!"
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "No version change."
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Stop workflow if version didn't change
      if: steps.version_check.outputs.changed == 'false'
      run: echo "Skipping deployment ‚Äî version hasn't changed."

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build:bundle

    - name: Run tests
      run: npm test

    - name: Install Zip (if necessary)
      run: sudo apt-get update && sudo apt-get install -y zip

    - name: Zip extension
      if: steps.version_check.outputs.changed == 'true'
      run: |
        cd distribution
        zip -r ../extension.zip .

    - name: List files in current directory # Ensuring extension.zip was successfully created
      if: steps.version_check.outputs.changed == 'true'
      run: ls -lh

    - name: Publish to Chrome Web Store
      if: steps.version_check.outputs.changed == 'true'
      uses: mobilefirstllc/cws-publish@latest
      with:
        action: 'publish' 
        client_id: ${{ secrets.CLIENT }}
        client_secret: ${{ secrets.SECRET }}
        refresh_token: ${{ secrets.TOKEN }}
        extension_id: ${{ secrets.EXTENSION_ID }}
        zip_file: 'extension.zip'

    - run: echo "üçè This job's status is ${{ job.status }}."
